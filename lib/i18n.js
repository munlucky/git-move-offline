const { loadConfig } = require('./config');

const messages = {
  en: {
    selectLanguage: 'Please select a language:',
    languageSet: 'Language set to English.\n',
    configNotFound: 'Configuration file not found. Please run the configuration first.',
    usage: 'Usage: node export.js /path/to/your/repo [branch_name]',
    repoPathRequired: 'Repository path is required.',
    exporting: 'Exporting git repository...\n',
    readingRefs: 'Reading refs and commits...\n',
    foundCommits: 'Found %s commits.',
    packing: 'Packing %s objects...\n',
    writingPack: 'Writing pack file and index...\n',
    compressing: 'Compressing repository...\n',
    exportFinished: 'Export finished: %s\n',
    importing: 'Importing git repository...\n',
    usageImport: 'Usage: node import.js /path/to/your/repo.zip',
    zipPathRequired: 'Zip file path is required.',
    extracting: 'Extracting repository...\n',
    repoExtracted: 'Repository extracted to: %s\n',
    fetching: 'Fetching objects from pack file...\n',
    importFinished: 'Import finished.\n',
    toolDescription: 'Git Move Offline (gitmv) - A tool for offline moving and synchronization of Git repositories',
    usageTitle: 'Usage:',
    exportCommand: 'Export current repository to ZIP',
    importCommand: 'Import repository from ZIP',
    optionsTitle: 'Options:',
    helpOption: 'Show this help message',
    versionOption: 'Show version',
    langOption: 'Set language (en, ko)',
    examplesTitle: 'Examples:',
    moreInfoTitle: 'More info:',
    exportOptions: 'export options: gitmv export --help',
    importOptions: 'import options: gitmv import --help',
    unknownCommand: 'Unknown command: %s\n',
    error: 'Error:',
    exportTitle: '=== Git Export Tool ===\n',
    checkGitRepo: 'Checking Git repository',
    notGitRepo: 'Not a Git repository. Please run this in a Git project directory.',
    uncommittedChanges: 'You have uncommitted changes. These will not be included in the export.',
    continueAnyway: 'Continue anyway?',
    exportCancelled: 'Export cancelled.',
    collectingMeta: 'Collecting repository metadata',
    repoInfo: '\nRepository Information:',
    currentBranch: '  Current Branch: %s',
    totalBranches: '  Total Branches: %s',
    totalTags: '  Total Tags: %s',
    branches: '\nBranches:',
    proceedWithExport: '\nProceed with export?',
    creatingBundle: 'Creating Git bundle (this may take a while)',
    verifyingBundle: 'Verifying bundle integrity',
    bundleFailed: 'Bundle verification failed',
    bundleSize: '  Bundle size: %s',
    creatingZip: 'Creating ZIP archive',
    zipSize: '  ZIP size: %s',
    cleaningUp: 'Cleaning up temporary files',
    exportComplete: 'Export Complete!',
    file: 'File: %s',
    size: 'Size: %s',
    location: 'Location: %s',
    nextSteps: 'Next steps:',
    copyZip: '1. Copy this ZIP file to your offline environment',
    runImport: '2. Run: gitmv import <zip-file-path>',
  },
  ko: {
    selectLanguage: '언어를 선택하세요:',
    languageSet: '언어가 한국어로 설정되었습니다.\n',
    configNotFound: '설정 파일을 찾을 수 없습니다. 먼저 설정을 실행하세요.',
    usage: '사용법: node export.js /path/to/your/repo [branch_name]',
    repoPathRequired: '저장소 경로가 필요합니다.',
    exporting: 'Git 저장소를 내보내는 중...\n',
    readingRefs: 'Ref 및 커밋 읽는 중...\n',
    foundCommits: '커밋 %s개를 찾았습니다.',
    packing: '오브젝트 %s개를 압축하는 중...\n',
    writingPack: '팩 파일과 인덱스를 쓰는 중...\n',
    compressing: '저장소를 압축하는 중...\n',
    exportFinished: '내보내기 완료: %s\n',
    importing: 'Git 저장소를 가져오는 중...\n',
    usageImport: '사용법: node import.js /path/to/your/repo.zip',
    zipPathRequired: 'Zip 파일 경로가 필요합니다.',
    extracting: '저장소 압축 해제 중...\n',
    repoExtracted: '저장소가 다음 위치에 압축 해제되었습니다: %s\n',
    fetching: '팩 파일에서 오브젝트를 가져오는 중...\n',
    importFinished: '가져오기 완료.\n',
    toolDescription: 'Git Move Offline (gitmv) - Git 저장소 오프라인 이동 도구',
    usageTitle: '사용법:',
    exportCommand: '현재 저장소를 ZIP으로 내보내기',
    importCommand: 'ZIP에서 저장소 가져오기',
    optionsTitle: '옵션:',
    helpOption: '도움말 메시지 표시',
    versionOption: '버전 표시',
    langOption: '언어 설정 (en, ko)',
    examplesTitle: '예시:',
    moreInfoTitle: '더 많은 정보:',
    exportOptions: 'export 옵션: gitmv export --help',
    importOptions: 'import 옵션: gitmv import --help',
    unknownCommand: '알 수 없는 명령어: %s\n',
    error: '오류:',
    exportTitle: '=== Git 내보내기 도구 ===\n',
    checkGitRepo: 'Git 저장소 확인 중',
    notGitRepo: 'Git 저장소가 아닙니다. Git 프로젝트 디렉토리에서 실행하세요.',
    uncommittedChanges: '커밋되지 않은 변경 사항이 있습니다. 내보내기에 포함되지 않습니다.',
    continueAnyway: '계속하시겠습니까?',
    exportCancelled: '내보내기가 취소되었습니다.',
    collectingMeta: '저장소 메타데이터 수집 중',
    repoInfo: '\n저장소 정보:',
    currentBranch: '  현재 브랜치: %s',
    totalBranches: '  총 브랜치: %s',
    totalTags: '  총 태그: %s',
    branches: '\n브랜치:',
    proceedWithExport: '\n내보내기를 진행하시겠습니까?',
    creatingBundle: 'Git 번들 생성 중 (시간이 걸릴 수 있습니다)',
    verifyingBundle: '번들 무결성 확인 중',
    bundleFailed: '번들 확인 실패',
    bundleSize: '  번들 크기: %s',
    creatingZip: 'ZIP 아카이브 생성 중',
    zipSize: '  ZIP 크기: %s',
    cleaningUp: '임시 파일 정리 중',
    exportComplete: '내보내기 완료!',
    file: '파일: %s',
    size: '크기: %s',
    location: '위치: %s',
    nextSteps: '다음 단계:',
    copyZip: '1. 이 ZIP 파일을 오프라인 환경으로 복사하세요',
    runImport: '2. 다음을 실행하세요: gitmv import <zip-file-path>',
  },
};

let lang = 'en';

function init() {
  const config = loadConfig();
  lang = config.language || 'en';
}

function getMessage(key, ...args) {
  const message = messages[lang][key] || messages.en[key];
  if (args.length > 0) {
    return require('util').format(message, ...args);
  }
  return message;
}

init();

module.exports = { getMessage, setLanguage: (newLang) => { lang = newLang; } };
